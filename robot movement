import numpy as np 
import pygame 
import math 
import random

green = (0 , 255 , 0)
red = (255 , 0 , 0)
blue = (0 ,0 , 255)
white = (255 ,255 , 255)
col  = (252, 3, 219)
black = (0 ,0 ,0)

pygame.init()
dimx , dimy = 800 , 600
surface = pygame.display.set_mode((dimx , dimy))
manholes= [(100 , 200) , (300 , 400) , (400 , 200) , (500 , 500) , (200 , 500) , (206 , 200) , (300 , 80), (100 , 100) , (200  , 150) , (150 , 200) , (200  , 150) , (300 , 350) ]
              	           
def plot_manholes(manholes) :
    for point in manholes :
        draw = pygame.draw.circle(surface, green, (point[0] , point[1]) , 5)
    for i in range(1 , len( manholes)) :
        lines = pygame.draw.line(surface , white , (manholes[i-1][0],manholes[i-1][1]) ,  (manholes[i][0],manholes[i][1]) )                         
    pygame.display.flip() 
 
starting_point =  manholes[10]
pos = starting_point
location = pos
n = manholes.index(location)
step = 5 #np.random.normal(5, 3 ) 

def move(manholes , location,  n):  
    if event.key == pygame.K_RIGHT :
        x = manholes[n+1][0] - manholes[n][0]
        y = manholes[n+1][1] - manholes[n][1]  
        grad = y/x 
        angle = np.arctan(y/x)
        if grad != 0 and manholes[n+1][0] - manholes[n][0] > 0 :                                                          
            locationx = location[0] + np.cos(angle)*step
            locationy = location[1] + np.sin(angle)*step
            pygame.draw.circle(surface, red, (location[0]  , location[1]) , 6)   
            location = (round(locationx , 2), round(locationy , 2))   
            print(location)
            return (location)
        if grad == 0 :
            locationx = location[0] - np.cos(angle)*step
            locationy = location[1] + np.sin(angle)*step
            pygame.draw.circle(surface, red, (location[0]  , location[1]) , 6)   
            location = (int(locationx) , int(locationy))             
            return (location)
        if  manholes[n+1][0] - manholes[n][0] < 0:
            locationx = location[0] - np.cos(angle)*step
            locationy = location[1] - np.sin(angle)*step
            pygame.draw.circle(surface, red, (location[0]  , location[1]) , 6)   
            location = (round(locationx , 1), round(locationy , 1))   
            print(location)
            return (location)
        
def sense(location , n ):      
    distance = np.sqrt((manholes[n+1][0] - location[0])**2 + (manholes[n+1][1] - location[1])**2)
    print(distance)
   # landmark = surface.get_at((int(location[0]), int(location[1])))    
    if distance < 5: 
        location = manholes[n+1]
        n +=1 
        return n , location 
    else:
        n = n
    return n  , location

length = len(manholes)-1 

while True : 
    for event in pygame.event.get() : 
        if event.type == pygame.QUIT :               
            pygame.quit()
            quit()      
            
            
    if event.type == pygame.KEYDOWN:        
        n , location = sense(location , n)                     
        if n == length:    
            print('fine') 
            manholes.reverse() 
            n = 0 
            location = (manholes[0][0] , manholes[0][1])            
        else :            
            location  = move(manholes, location, n)            
    else :
        pygame.draw.circle(surface, red, (location[0]  , location[1]) , 6)  
                 
    pygame.display.update()         
    surface.fill(black)                               
    pygame.time.delay(100)                  
    plot_manholes(manholes)  
   
